import type { Metadata } from "next";
import { Inter } from "next/font/google";
import localFont from "next/font/local";

// 글로벌 스타일
import "./globals.css"; // 이 경로가 정확한지 확인
import "./css/style.css"; // 이 경로가 정확한지 확인

// UI 컴포넌트
import Header from "@/components/ui/header"; // @ 경로가 올바르게 설정되었는지 확인

// 폰트 설정
const geistSans = localFont({
  src: "fonts/GeistVF.woff", // 절대 경로로 변경 가능
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "fonts/GeistMonoVF.woff", // 절대 경로로 변경 가능
  variable: "--font-geist-mono",
  weight: "100 900",
});
const inter = Inter({
  subsets: ["latin"],
  variable: "--font-inter",
  display: "swap",
});
const nacelle = localFont({
  src: [
    {
      path: "fonts/nacelle-regular.woff2", // 올바른 절대 경로
      weight: "400",
      style: "normal",
    },
    {
      path: "fonts/nacelle-italic.woff2", // 올바른 절대 경로
      weight: "400",
      style: "italic",
    },
    {
      path: "fonts/nacelle-semibold.woff2", // 올바른 절대 경로
      weight: "600",
      style: "normal",
    },
    {
      path: "fonts/nacelle-semibolditalic.woff2", // 올바른 절대 경로
      weight: "600",
      style: "italic",
    },
  ],
  variable: "--font-nacelle",
  display: "swap",
});

// 메타데이터 설정
export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

// 최종 병합된 레이아웃
export default function RootLayout({
                                     children,
                                   }: Readonly<{
  children: React.ReactNode;
}>) {
  return (
      <html lang="en">
      <body
          className={`${geistSans.variable} ${geistMono.variable} ${inter.variable} ${nacelle.variable} bg-gray-950 font-inter text-base text-gray-200 antialiased`}
      >
      <div className="flex min-h-screen flex-col overflow-hidden supports-[overflow:clip]:overflow-clip">
        <Header />
        {children}
      </div>
      </body>
      </html>
  );
}
